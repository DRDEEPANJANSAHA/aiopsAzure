steps:
- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: set -eux
            flake8 --output-file=lint-testresults.xml --format junit-xml
  displayName: 'Run lint tests'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: set -eux 
            python -m pytest tests/unit --cov=diabetes_regression --cov-report=html --cov-report=xml --junitxml=unit-testresults.xml
  displayName: 'Test with pytest'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '*-testresults.xml'
    testRunTitle: 'Linting & Unit tests'
    failTaskOnFailedTests: true
  displayName: 'Publish test results'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage report'
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: 'coverage.xml'
    reportDirectory: 'htmlcov'
    failIfCoverageEmpty: true
